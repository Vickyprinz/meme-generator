{"ast":null,"code":"class API {\n  static signin(user) {\n    return fetch(this.signinUrl, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(resp => resp.json());\n  }\n  static signup(user) {\n    return fetch(this.signupUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(resp => resp.json());\n  }\n  static validate() {\n    const token = localStorage.getItem('token');\n    return fetch(this.validateUrl, {\n      headers: {\n        Authorization: token\n      }\n    }).then(resp => resp.json());\n  }\n  static getDashboard() {\n    return fetch(this.dashboardUrl, {\n      headers: {\n        Authorization: localStorage.getItem('token')\n      }\n    }).then(resp => resp.json());\n  }\n  static createMeme(myMeme) {\n    return fetch(this.myMemes, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem('token')\n      },\n      body: JSON.stringify(myMeme)\n    }).then(resp => resp.json());\n  }\n}\nAPI.baseUrl = 'http://localhost:3001';\nAPI.signinUrl = API.baseUrl + '/signin';\nAPI.signupUrl = API.baseUrl + '/signup';\nAPI.validateUrl = API.baseUrl + '/validate';\nAPI.dashboardUrl = API.baseUrl + '/dashboard';\nAPI.myMemes = API.baseUrl + '/customised_memes';\nexport default API;","map":{"version":3,"names":["API","signin","user","fetch","signinUrl","method","headers","body","JSON","stringify","then","resp","json","signup","signupUrl","validate","token","localStorage","getItem","validateUrl","Authorization","getDashboard","dashboardUrl","createMeme","myMeme","myMemes","baseUrl"],"sources":["/home/victor/phase-3/project/meme/client/src/API.js"],"sourcesContent":["class API {\n    static baseUrl = 'http://localhost:3001' \n    static signinUrl = API.baseUrl + '/signin'\n    static signupUrl = API.baseUrl + '/signup'\n    static validateUrl = API.baseUrl + '/validate'\n    static dashboardUrl = API.baseUrl + '/dashboard'\n    static myMemes = API.baseUrl + '/customised_memes'\n \n    static signin (user) {\n     return fetch(this.signinUrl, {\n         method: \"POST\",\n         headers: {'Content-Type': 'application/json'},\n         body: JSON.stringify(user)\n     }).then(resp => resp.json())\n \n    }\n    static signup (user) {\n        return fetch(this.signupUrl, {\n            method: 'POST', \n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(user)\n        }).then(resp => resp.json())\n       }\n       static validate () {\n        const token = localStorage.getItem('token') \n        return fetch(this.validateUrl, {\n         headers: { Authorization: token }\n     }).then(resp => resp.json())\n    }\n    static getDashboard () {\n        return fetch(this.dashboardUrl, {\n            headers: {Authorization: localStorage.getItem('token')}\n        }).then(resp => resp.json())\n    }\n\n    static createMeme (myMeme) {\n        return fetch(this.myMemes, {\n         method: \"POST\",\n         headers: { \"Content-Type\": \"application/json\",\n         Authorization: localStorage.getItem('token') },\n         body: JSON.stringify(myMeme)\n       }).then(resp => resp.json())\n     }\n }\n \n export default API\n "],"mappings":"AAAA,MAAMA,GAAG,CAAC;EAQN,OAAOC,MAAMA,CAAEC,IAAI,EAAE;IACpB,OAAOC,KAAK,CAAC,IAAI,CAACC,SAAS,EAAE;MACzBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC7B,CAAC,CAAC,CAACQ,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,EAAE,CAAC;EAE7B;EACA,OAAOC,MAAMA,CAAEX,IAAI,EAAE;IACjB,OAAOC,KAAK,CAAC,IAAI,CAACW,SAAS,EAAE;MACzBT,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC7B,CAAC,CAAC,CAACQ,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,EAAE,CAAC;EAC7B;EACA,OAAOG,QAAQA,CAAA,EAAI;IAClB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,OAAOf,KAAK,CAAC,IAAI,CAACgB,WAAW,EAAE;MAC9Bb,OAAO,EAAE;QAAEc,aAAa,EAAEJ;MAAM;IACpC,CAAC,CAAC,CAACN,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,EAAE,CAAC;EAC7B;EACA,OAAOS,YAAYA,CAAA,EAAI;IACnB,OAAOlB,KAAK,CAAC,IAAI,CAACmB,YAAY,EAAE;MAC5BhB,OAAO,EAAE;QAACc,aAAa,EAAEH,YAAY,CAACC,OAAO,CAAC,OAAO;MAAC;IAC1D,CAAC,CAAC,CAACR,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,EAAE,CAAC;EAChC;EAEA,OAAOW,UAAUA,CAAEC,MAAM,EAAE;IACvB,OAAOrB,KAAK,CAAC,IAAI,CAACsB,OAAO,EAAE;MAC1BpB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE,kBAAkB;QAC7Cc,aAAa,EAAEH,YAAY,CAACC,OAAO,CAAC,OAAO;MAAE,CAAC;MAC9CX,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACe,MAAM;IAC7B,CAAC,CAAC,CAACd,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,EAAE,CAAC;EAC9B;AACJ;AA3CKZ,GAAG,CACE0B,OAAO,GAAG,uBAAuB;AADtC1B,GAAG,CAEEI,SAAS,GAAGJ,GAAG,CAAC0B,OAAO,GAAG,SAAS;AAFxC1B,GAAG,CAGEc,SAAS,GAAGd,GAAG,CAAC0B,OAAO,GAAG,SAAS;AAHxC1B,GAAG,CAIEmB,WAAW,GAAGnB,GAAG,CAAC0B,OAAO,GAAG,WAAW;AAJ5C1B,GAAG,CAKEsB,YAAY,GAAGtB,GAAG,CAAC0B,OAAO,GAAG,YAAY;AAL9C1B,GAAG,CAMEyB,OAAO,GAAGzB,GAAG,CAAC0B,OAAO,GAAG,mBAAmB;AAuCrD,eAAe1B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}